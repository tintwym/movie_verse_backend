name: Deploy to AWS EC2

on:
  push:
    branches:
      - main  # Change this to your default branch if needed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Verify Directory Structure
      run: ls -l  # Show current directory structure

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_PASS }}" | docker login -u "tintwaiyanmin97" --password-stdin

    - name: Build with Maven
      run: |
        ls -l  # Check directory structure
        if [ -f "pom.xml" ]; then
          mvn clean install -DskipTests  # Run from root directory
        else
          echo "pom.xml not found! Exiting..."
          exit 1
        fi

    - name: Build and Push Docker Image
      run: |
        docker build -t tintwaiyanmin97/movie_verse_backend .
        docker tag tintwaiyanmin97/movie_verse_backend:latest tintwaiyanmin97/movie_verse_backend:latest
        docker push tintwaiyanmin97/movie_verse_backend:latest

    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa  # Remove Windows line endings
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H 47.128.225.49 >> ~/.ssh/known_hosts

    - name: SSH into Server
      uses: appleboy/ssh-action@master
      with:
        host: 47.128.225.49
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "🚀 Connecting to server..."
          
          # Ensure the directory exists
          mkdir -p /var/www/app
          
          # Navigate to the directory
          cd /var/www/app
          
          # Clone repository if missing
          if [ ! -d ".git" ]; then
            echo "📂 Cloning repository..."
            git clone https://github.com/your-username/your-repo.git .
          else
            echo "🔄 Pulling latest changes..."
            git pull origin main
          fi
          
          # Build the Spring Boot application using Maven
          echo "⚙️ Building application..."
          mvn clean package -DskipTests
          
          # Stop running instance (if exists)
          echo "🛑 Stopping existing application..."
          pkill -f 'java -jar' || echo "No running instance found."
          
          # Start the new application in the background
          echo "🚀 Starting new application..."
          nohup java -jar target/*.jar > /dev/null 2>&1 &

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: "47.128.225.49"
        username: "ubuntu"
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          docker pull tintwaiyanmin97/movie_verse_backend:latest
          docker stop movie_verse_backend || true
          docker rm movie_verse_backend || true
          docker system prune -af || true
          docker run -d -p 9090:9090 --name movie_verse_backend tintwaiyanmin97/movie_verse_backend:latest
